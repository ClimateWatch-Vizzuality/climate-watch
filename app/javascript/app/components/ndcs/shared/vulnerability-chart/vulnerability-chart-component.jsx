/* eslint-disable max-len */
import React, { useEffect } from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import ReactTooltip from 'react-tooltip';
import Icon from 'components/icon';
import infoIcon from 'assets/icons/info.svg';

import styles from './vulnerability-chart-styles.scss';

const VulnerabilityChart = ({ data }) => {
  useEffect(() => {
    ReactTooltip.rebuild();
  }, [data]);

  const getLeftPercentage = median => {
    const MIN_VALUE = 0.225;
    const MAX_VALUE = 0.675;
    const range = MAX_VALUE - MIN_VALUE;
    return ((median - MIN_VALUE) * 100) / range;
  };

  return (
    <div>
      <div className={styles.vulnerabilityTitleContainer}>
        <span className={styles.vulnerabilityTitle}>Median vulnerability</span>
        <span
          className={styles.infoContainer}
          data-for="vulnerability-tooltip"
          data-tip="Median Vulnerability: the median score represents the middle value separating the greater and lesser halves of scores for all countries under each indicator. Median scores do not necessarily reflect individual country vulnerability."
        >
          <Icon icon={infoIcon} className={styles.infoIcon} />
          <ReactTooltip id="vulnerability-tooltip" effect="solid" />
        </span>
      </div>
      <div>
        {data.map(d => {
          const { name, median, partiesNumber, medianCategory, color } = d;
          if (partiesNumber === 0) return null;
          const noData = median === 0;
          const tooltipText = `Countries with <bold class=${
            styles.bold
          }>"${name}"</bold> have ${
            noData
              ? 'no data for vulnerability to climate change.'
              : `a ${medianCategory} median vulnerability to climate change impacts (${median}).`
          }`;
          return (
            <div className={styles.vulnerabilityBarContainer}>
              <span
                className={cx(
                  styles.vulnerabilityBar,
                  styles.vulnerabilityBarLow
                )}
                style={{ backgroundColor: noData ? '#f1f4fb' : color }}
                data-for="vulnerability-bar-tooltip"
                data-tip={tooltipText}
              >
                <span className={styles.mark} />
                {!noData && (
                  <span
                    className={styles.marker}
                    style={{
                      left: `${getLeftPercentage(median)}%`
                    }}
                  />
                )}
              </span>
              <span className={styles.vulnerabilityText}>
                <span>
                  {noData ? 'No data' : `${medianCategory}: ${median}`}
                </span>
              </span>
            </div>
          );
        })}
        <ReactTooltip
          id="vulnerability-bar-tooltip"
          effect="solid"
          type="light"
          html
        />
      </div>
    </div>
  );
};

export default VulnerabilityChart;

VulnerabilityChart.propTypes = {
  data: PropTypes.object
};
