/* eslint-disable no-confusing-arrow */
import React from 'react';
import Proptypes from 'prop-types';

import Card from 'components/card';
import VulnerabilityGraph from 'components/vulnerability-graph';
import AdaptationsProvider from 'providers/adaptations-provider';
import Loading from 'components/loading';
import ReactTooltip from 'react-tooltip';
import AbbrReplace from 'components/abbr-replace';
import InfoButton from 'components/button/info-button';
import ModalMetadata from 'components/modal-metadata';
import PreviousSubmissionIcon from 'components/previous-submission-icon';
import cardFullHeightTheme from 'styles/themes/card/card-full-height.scss';

import layout from 'styles/layout.scss';

import PrepCard from './prep-card';
import styles from './country-climate-vulnerability-styles.scss';
// import styles from './climate-vulnerability-styles.scss';

const FEATURE_COUNTRY_CHANGES = process.env.FEATURE_COUNTRY_CHANGES === 'true';

// Mock data
const ndcAdaptationIndicators = [
  {
    value: 'Yes, enhancement in the revised submission',
    text: 'Does the NDC have an adaptation component?'
  },
  {
    value: 'Yes, enhancement in the revised submission',
    text: 'Does the NDC identify adaptation priorities?'
  },
  {
    value: 'Yes, enhancement in the revised submission',
    text:
      'Does the NDC identify financial needs for implementing identified adaptation priorities?'
  },
  {
    value: 'Yes, enhancement in the revised submission',
    text: 'Does the NDC mention losses and damages from climate change?'
  }
];
function CountryClimateVulnerability(props) {
  const {
    sectionData,
    definitions,
    countries,
    ready,
    countryName,
    setModalMetadata
  } = props;

  const handleInfoClick = slug => {
    setModalMetadata({
      category: 'Vulnerability',
      slug,
      open: true
    });
  };

  const infoButton = slug => (
    <InfoButton
      className={styles.infoBtn}
      infoOpen={false}
      handleInfoClick={() => handleInfoClick(slug)}
    />
  );

  const renderLegacyContent = () => (
    <React.Fragment>
      <div className={styles.header}>
        <div className={styles.titleContainer}>
          <h3 className={styles.title}>Climate Vulnerability and Readiness</h3>
          <AbbrReplace>
            <div className={styles.descriptionContainer}>
              <div className="grid-column-item">
                The poor are disproportionately affected by
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.climateRisks}
                >
                  {' '}
                  climate risks{' '}
                </span>
                such as sea level rise, increases in temperature and more
                erratic rainfall, often experienced as more frequent and extreme
                weather events such as storms, floods, and droughts. Because the
                poor are more
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.exposed}
                >
                  {' '}
                  exposed{' '}
                </span>
                and
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.sensitive}
                >
                  {' '}
                  sensitive{' '}
                </span>
                to such impacts and generally have lower capacity and fewer
                resources with which to adapt, they are more
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.vulnerable}
                >
                  {' '}
                  vulnerable{' '}
                </span>
                to climate change.
              </div>
              <div className="grid-column-item">
                Their vulnerability makes them less
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.resilient}
                >
                  {' '}
                  resilient{' '}
                </span>
                to the impacts of climate change. Supporting the inclusion of
                the poor in planning and implementing adaptation actions and
                ensuring that a greater share of adaptation funding reaches
                local communities can improve their{' '}
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.ready}
                >
                  readiness
                </span>{' '}
                to{' '}
                <span
                  className={styles.tooltipTrigger}
                  data-tip={definitions.adapt}
                >
                  adapt
                </span>{' '}
                to climate change and reduce poverty.
              </div>
            </div>
          </AbbrReplace>
        </div>
        <ReactTooltip className={styles.tooltip} />
      </div>
      {!ready ? (
        <Loading light className={styles.paddedBottom} />
      ) : (
        <div className="grid-column-item">
          <div className={styles.cards}>
            {sectionData &&
              sectionData.map(section => (
                <div className={styles.card} key={section.slug}>
                  {section.sectionType === 'LINK' ? (
                    <PrepCard className={styles.prepCard} />
                  ) : (
                    <Card
                      title={section.title}
                      subtitle={section.subtitle}
                      contentFirst
                    >
                      <VulnerabilityGraph
                        sectionData={section}
                        countries={countries}
                      />
                    </Card>
                  )}
                </div>
              ))}
          </div>
        </div>
      )}
    </React.Fragment>
  );

  const renderContent = () => {
    if (FEATURE_COUNTRY_CHANGES) {
      const vulnerabilitySection =
        sectionData && sectionData.find(s => s.slug === 'vulnerability');
      const readinessSection =
        sectionData && sectionData.find(s => s.slug === 'readiness');
      return (
        <div>
          <div className={styles.header}>
            <div className={styles.titleContainer}>
              <h3 className={styles.title}>
                What is {countryName}
                {"'"}s vulnerability and readiness situation?{' '}
              </h3>
              <AbbrReplace>
                <div className={styles.descriptionContainer}>
                  <div className="grid-column-item">
                    The poor are disproportionately affected by
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.climateRisks}
                    >
                      {' '}
                      climate risks{' '}
                    </span>
                    such as sea level rise, increases in temperature and more
                    erratic rainfall, often experienced as more frequent and
                    extreme weather events such as storms, floods, and droughts.
                    Because the poor are more
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.exposed}
                    >
                      {' '}
                      exposed{' '}
                    </span>
                    and
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.sensitive}
                    >
                      {' '}
                      sensitive{' '}
                    </span>
                    to such impacts and generally have lower capacity and fewer
                    resources with which to adapt, they are more
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.vulnerable}
                    >
                      {' '}
                      vulnerable{' '}
                    </span>
                    to climate change.
                  </div>
                  <div className="grid-column-item">
                    Their vulnerability makes them less
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.resilient}
                    >
                      {' '}
                      resilient{' '}
                    </span>
                    to the impacts of climate change. Supporting the inclusion
                    of the poor in planning and implementing adaptation actions
                    and ensuring that a greater share of adaptation funding
                    reaches local communities can improve their{' '}
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.ready}
                    >
                      readiness
                    </span>{' '}
                    to{' '}
                    <span
                      className={styles.tooltipTrigger}
                      data-tip={definitions.adapt}
                    >
                      adapt
                    </span>{' '}
                    to climate change and reduce poverty.
                  </div>
                </div>
              </AbbrReplace>
              <div className={styles.cards}>
                {' '}
                <Card
                  title="NDC-Adaptation Snapshots"
                  contentFirst
                  info={infoButton('ndc-adaptation')}
                  theme={cardFullHeightTheme}
                >
                  <div className={styles.adaptationIndicators}>
                    {ndcAdaptationIndicators.map(i => (
                      <div className={styles.adaptationIndicator}>
                        <PreviousSubmissionIcon
                          value={i.value}
                          className={styles.valueIcon}
                        />
                        <div>{i.text}</div>
                      </div>
                    ))}
                  </div>
                </Card>
                <div className={styles.scoreCards}>
                  <Card
                    title="NDC-GAIN vulnerability score"
                    subtitle="Lower score indicates less vulnerability"
                    contentFirst
                    info={infoButton('vulnerability')}
                  >
                    {vulnerabilitySection && (
                      <VulnerabilityGraph
                        sectionData={vulnerabilitySection}
                        countries={countries}
                        noInfo
                      />
                    )}
                  </Card>
                  <Card
                    title="NDC-GAIN readiness score"
                    subtitle="Higher score indicates high level of readiness"
                    contentFirst
                    info={infoButton('readiness')}
                  >
                    {readinessSection && (
                      <VulnerabilityGraph
                        sectionData={readinessSection}
                        countries={countries}
                        noInfo
                      />
                    )}
                  </Card>
                </div>
                <Card
                  title="Natural Hazard Ocurrence"
                  contentFirst
                  info={infoButton('hazards')}
                >
                  Pie and legend
                </Card>
              </div>
            </div>
            <ReactTooltip className={styles.tooltip} />
          </div>
        </div>
      );
    }
    return renderLegacyContent();
  };

  // eslint-disable-line react/prefer-stateless-function
  return (
    <div className={styles.wrapper}>
      <AdaptationsProvider />
      <ModalMetadata />
      <div className={layout.content}>{renderContent()}</div>
    </div>
  );
}

CountryClimateVulnerability.propTypes = {
  sectionData: Proptypes.array,
  ready: Proptypes.bool.isRequired,
  definitions: Proptypes.object.isRequired,
  countries: Proptypes.array,
  setModalMetadata: Proptypes.func.isRequired,
  countryName: Proptypes.string
};

export default CountryClimateVulnerability;
