@import 'settings';
@import "~foundation-sites/scss/global";
@import "~foundation-sites/scss/util/util";
@import "~foundation-sites/scss/xy-grid/xy-grid";

$grid-container: $max-width;
$grid-margin-gutters: $gutter-padding;
$grid-padding-gutters: $gutter-padding;

@mixin row($columns: full, $wrap: true, $gridDirection: 'horizontal') {
  @include xy-grid($wrap: $wrap, $direction: $gridDirection);
  @include xy-gutters();
  @include xy-grid-container;
  @include shared-column($columns, $gridDirection);
}

@mixin setGutters($gridDirection) {
  @if $gridDirection == 'vertical' {
    @include xy-gutters('top', 'bottom');
  }

  @else {
    @include xy-gutters();
  }
}

@mixin columns($columns: full, $wrap: true, $gutters: true, $gridDirection: 'horizontal') {
  @include xy-grid($wrap: $wrap, $direction: $gridDirection);
  $negative: true;
  $gutters-value: $grid-margin-gutters;

  @if $gutters == false {
    $gutters-value: 0;
  }

  @else {
    @include xy-gutters($negative: $negative);
  }

  @include shared-column($columns, $gridDirection, $gutters-value);
}

@mixin column-offset($number: 0) {
  @include xy-cell-offset($number);
}

@mixin shared-column($columns, $gridDirection, $gutters: $grid-margin-gutters) {
  @if type-of($columns) == list {
    @for $i from 1 through length($columns) {
      $size: nth($columns, $i);

      > *:nth-child(#{$i}) {
        @if $gridDirection == 'vertical' {
          @include xy-cell('full');
          @include xy-cell($size, $vertical: true);
          @include xy-gutters($gutter-position: ('top', 'bottom'));
        }

        @else {
          @include xy-cell($size);
        }
      }
    }
  }

  @else {
    > * {
      @if $gridDirection == 'vertical' {
          @include xy-cell('full');
          @include xy-cell($columns, $vertical: true);
          @include xy-gutters($gutter-position: ('top', 'bottom'));
        }

      @else {
        @include xy-cell($columns, $gutters: $gutters);
      }
    }
  }
}

.content {
  @include row();
}

%grid {
  display: grid;
  grid-column-gap: $gutter-padding;
}

@mixin msGridColumns($columns...) {
  $frs: ();

  @for $i from 1 through length($columns) {
    $item: nth($columns, $i);

    @if $i==$columns {
      $frs: append($frs, $item);
    }

    @else {
      $frs: append($frs, $item $gutter-padding);
    }

    > *:nth-child(#{$i}) {
      -ms-grid-column: #{$i + ($i - 1)};

      @media #{$tablet-landscape} {
        width: 100%;
      }

      // Adding extra margin to fix safari and IE spacing
      @if $i!=length($columns) {
        margin-right: $gutter-padding;
      }
    }
  }

  display: -ms-grid;
  -ms-grid-columns: $frs;
}

@mixin clearFix() {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    display: block;
    clear: both;
    height: 1px;
    margin-top: -1px;
    visibility: hidden;
  }

  & {
    *zoom: 1;
  }
}
// the overflow-x scroll prevents the overflow-y to be visible so we need this hack to keep the dropdowns visible
@mixin overflowFix($size) {
  padding-top: $size;
  margin-top: -#{$size};
}
