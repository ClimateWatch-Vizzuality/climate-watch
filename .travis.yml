os: linux
dist: xenial
language: ruby
env:
  global:
    - CC_TEST_REPORTER_ID=010c7b37d1aaadcc84a23a3339f7c9a204c2117f7bd97a16de31017a38e5a758
    - GIT_COMMITTED_AT=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then git log -1 --pretty=format:%ct; else git log -1 --skip 1 --pretty=format:%ct; fi)
    - MAILER_DEFAULT_FROM=no-reply@example.com MAILER_DEFAULT_URL=example.com
cache:
  bundler: true
  yarn: true
  directories:
    - node_modules
    - /home/travis/.rvm
services:
  - postgresql
addons:
  postgresql: 12
  apt:
    packages:
      - postgresql-12
      - postgresql-client-12
      - postgresql-server-dev-12

before_install:
  - nvm install 8.10.0
  - node -v
  - npm i -g yarn
  - gem install bundler
install:
  - bundle install --jobs=3 --retry=3
  - yarn
before_script:
  - bundle exec rake db:create db:structure:load RAILS_ENV=test
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
script:
  - bundle exec rspec
  # Preferably you will run test-reporter on branch update events. But
  # if you setup travis to build PR updates only, you don't need to run
  # the line below
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./cc-test-reporter after-build -t simplecov --exit-code $TRAVIS_TEST_RESULT; fi
  # In the case where travis is setup to build PR updates only,
  # uncomment the line below
  # - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
notifications:
  slack:
    secure: LhOZUX759yvGkDLBJaSHKnhVHFBb2HNBtIcBGumcLOd0sX8tTwyzUfTRuffg3zz5bc6HuOXl7e6wiVgt6Kv1bsGsAXhnSgF3zNv/IHlAHxsbxF+k0V/PNxm/G1aW+LsBrWF3uSEm86afvJcMvxtv7P/cQrGhXSg9I4i0bOVyjBilFB5CLPTFmjKpWdX6kRDezVQTM3XAAztin8hoF90kGNOtKCIud5KA73gHxAFGJQxL4am2QazZxOXRTZ+XLuHovQrpgyDc7uPh3DUuH+9R1H/nSp84Wr27kLVRzK3Pb5eFN+4DCdPGKAl4ap943b+DNr5qPVGS1kF7sZGJ11NC9f8uDTdECbI7PCXlLwo6+xtDogjUrATeBB9p2/5KTdKoTarXsk3Xgjz2APrtwW4WKysxf3DuU34j6Oh6ACWR1zgyFKSMqrU+724smsYALnXuozEGnqudslCitr6NUP4oHiL2JfFlFpoBvy1YZV7RarQVL1MJe+N9V1m5PoO56T/t4GoZdYw+12JrYNzoAeosvk/2/9L/hs+ZjMXhjJHPaeWqBVgQ2Ib1WJSVOcKkLe3SfasFQ3myb3PoWB0G4n9B5ABCcXg1V8pz4oPqvJh4B2X1L3NpOZ/NH8FQ1a7t4JiVmTqSrL6fTML+vd0kpkV/dfBwWaKC5FUsSlM1jCDoh8M=
