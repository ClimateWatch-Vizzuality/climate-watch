apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: climate-watch
  labels:
    name: {name}
  name: {name}
spec:
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        name: {name}
    spec:
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "webapps"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - webapps
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - {name}
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {name}
        image: vizzuality/{name}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
        args:
          - start
        env:
          - name: CW_FILES_PREFIX
            value: 'climatewatch.org/www.climatewatch.org/climate-watch/'
          - name: RACK_ENV
            value: production
          - name: RAILS_ENV
            value: production
          - name: PORT
            value: "3000"
          - name: RAILS_SERVE_STATIC_FILES
            value: "true"
          - name: PASSWORD_PROTECT
            value: "false"
          - name: RAILS_LOG_TO_STDOUT
            value: "true"
          - name: AUTH_USERNAME
            valueFrom:
              secretKeyRef:
                name: appsecrets
                key: CW_AUTH_USERNAME
          - name: AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: appsecrets
                key: CW_AUTH_PASSWORD
          - name: POSTGRES_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: CW_POSTGRES_URL
          - name: SHARED_POSTGRES_URL
            valueFrom:
              secretKeyRef:
                  name: dbsecrets
                  key: CW_SHARED_POSTGRES_URL
          - name: S3_BUCKET_NAME
            value: "wri-sites"
          - name: AWS_REGION
            value: "eu-west-1"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CW_PLATFORMS_S3_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CW_PLATFORMS_S3_SECRET_ACCESS_KEY
          - name: ESP_API
            value: "https://data.emissionspathways.org/api/v1"
          - name: GFW_API
            value: "https://production-api.globalforestwatch.org"
          - name: CORS_WHITELIST
            value: "*"
          - name: REDIS_SERVER
            value: redis://localhost:6379

        ports:
          - containerPort: 3000

      - name: {name}-sidekiq
        image: vizzuality/{name}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "4Gi"
        args:
          - sidekiq
        env:
          - name: CW_FILES_PREFIX
            value: 'climatewatch.org/www.climatewatch.org/climate-watch/'
          - name: RACK_ENV
            value: production
          - name: RAILS_ENV
            value: production
          - name: PORT
            value: "3000"
          - name: RAILS_SERVE_STATIC_FILES
            value: "true"
          - name: AWS_REGION
            value: eu-west-1
          - name: S3_BUCKET_NAME
            value: "wri-sites"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CW_PLATFORMS_S3_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: CW_PLATFORMS_S3_SECRET_ACCESS_KEY
          - name: POSTGRES_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: CW_POSTGRES_URL
          - name: REDIS_SERVER
            value: redis://localhost:6379
      - name: redis
        image: redis
        ports:
         - containerPort: 6379
        resources:
         requests:
           memory: "0Mi"
           cpu: "0m"

      restartPolicy: Always
